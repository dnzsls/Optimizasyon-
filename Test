import pandas as pd
import numpy as np

# === Parametreler ===
precision_floor = 0.60       # minimum precision
min_pred_count  = 1000       # en az 1000 tahmin edilen kişi
prob_threshold  = 0.70       # proba > 0.70
results = []

# reason bazlı döngü
for reason in reason_map_1d.keys():
    prob_col = f"prob_{reason}"
    flag_col = f"flag_{reason}"

    # 1) Yalnızca %70 üzeri olasılıkları filtrele
    sub = df_wide[df_wide[prob_col] >= prob_threshold].copy()

    # 2) Toplam tahmin edilen kişi sayısı
    pred_count = len(sub)

    # 3) Gerçekten o reason’dan arayan sayısı
    true_count = sub[flag_col].sum()

    # 4) Precision ve Recall hesapla
    precision = true_count / pred_count if pred_count > 0 else np.nan
    recall = true_count / df_wide[flag_col].sum() if df_wide[flag_col].sum() > 0 else np.nan

    # 5) Filtre: precision ≥ 0.60 ve pred_count ≥ 1000
    if precision >= precision_floor and pred_count >= min_pred_count:
        results.append({
            "reason": reason,
            "precision": precision,
            "recall": recall,
            "pred_count": pred_count,
            "true_count": true_count
        })

# === Sonuç tablosu ===
summary_filtered = pd.DataFrame(results).sort_values("precision", ascending=False)
print(summary_filtered)
